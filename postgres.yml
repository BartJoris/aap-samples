- name: Create a PostgreSQL Cluster
  hosts: all
  vars:
    openshift_project: postgres-example
    postgres_cluster_name: postgres-cluster
  tasks:
    - name: Use OpenShift Default Bearer Token
      hosts: all
      vars:
        openshift_api: "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"
        openshift_token: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
        ca_cert_path: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"

      tasks:
        - name: Authenticate with OpenShift
          command: >
            oc login --server={{ openshift_api }} --token={{ openshift_token }} --certificate-authority={{ ca_cert_path }}
          changed_when: false

    - name: OC get user info
      command: oc whoami
      register: oc_whoami

    - name: Check if OpenShift Project Exists
      command: oc get project {{ openshift_project }}
      register: project_exists
      failed_when: false
      changed_when: false

    - name: Create OpenShift Project if it does not exist
      command: >
        oc new-project {{ openshift_project }}
      register: create_project
      failed_when: create_project.rc != 0 and "already exists" not in create_project.stderr
      when: "'Active' not in project_exists.stdout"

    - name: Template PostgreSQL yaml file
      set_fact:
        postgres_yaml: "{{ lookup('template', 'templates/postgres_cluster.yml.j2') }}"

    - name: Create PostgreSQL cluster
      command: oc apply -f -
      args:
        stdin: "{{ postgres_yaml }}"
      changed_when: true
